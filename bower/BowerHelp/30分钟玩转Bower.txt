理解的概念
==========
config
------

文件的3种状态
-------------


工程配置
========
Step1：


Step2:


Step3:


Step4:


包(安装)
=======
bower install bootstrap -S


包(查看)
========
#查看包的所有版本信息
bower info jquery

#查看包的依赖情况
$ bower list

#查看包的资源
$ bower list --paths 



文件操作(jamesCN,pull)
========
Step8:

#查看远程库
git remote -v

#查看某个远程库详细信息
git remote show solution

#增加、修改、删除远程库名称
git remote add solution https://github.com/rainbowCN/solution.git
git remote rm solution

#jamesCN 执行clone操作后，rainbowCN再次提交更新。james获取服务器最新的code。
git pull solution

查看记录(jamesCN/rainbowCN,log)
========
#查看提交记录，log有很强大的参数，使用GUI是另一探索。
git log -p -2


创建分支操作(rainbowCN,branch/checkout)
========
#rainbowCN创建另一个分支english用来学习英语语法
git branch english
git checkout english

#快捷方式
git checkout -b english

#推送分支内容
git push origin english


获取remote update数据(jamesCN,pull)
========
#jamesCN获取并合并origin最新分支的内容
git pull origin


新的一天(jamesCN)
========
#查看本地文件状况
git status
#比较工作目录中当前文件和暂存区域快照之间的差异，也就是修改之后还没有暂存起来的变化内容。
git diff 
#比较已经暂存起来的文件和上次提交时的快照之间的差异
git diff --cached

#查看远程服务器状况
git remote show origin


冲突监测(rainbowCN)
========
#Auto-merging plan/plan.txt,Merge made by 'recursive' strategy.
vi
git commit -a
git push origin master

#<<<<<<< HEAD
#...
#=======
#...
#>>>>>>> iss53
#解决冲突

git commit -a
git push 

#2个author修改同一个文件，必然会造成冲突。修改一个文件之前，先pull再修改，可减少冲突发生的几率。

查看分支信息(rainbowCN)
============
git branch
git branch -v
git branch --merged
git branch --no--merged

查看并push分支信息(jamesCN)
============
git fetch origin
git checkout english
git push origin english



删除(rainbowCN)
============
#unTracked，随便删除与Git无关
#tracked的文件实际上是删除的staged的文件，rm会同时删除物理文件！
git rm plan.txt

#plan删除前，modified&tracked(add)。则需要-f
git rm plan.txt -f

#删除且保留在当前文件目录
git rm --cached plan.txt


重命名文件(rainbowCN)
============
#$ git rm plan.txt -> $ git add plan
git mv plan.txt plan.md


####CentOS创建账号管理项目(jamesCN)####
git config -l
#没有配置ssh和在rainbowCN上创建账号？
#connect to host github.com port 22: Connection timed out
#account setting

ssh-keygen -C 'x.james.yu@gmail.com' -t rsa
git clone git@github.com:rainbowCN/solution.git


查看提交的历史
==============
#查看所有的历史记录
git log

#查看最近某次的提交历史
git log -2

#查看每次提交的内容差异
git log -p -2

#仅显示简要的增改行数统计
git log -2 --stat，

#形象地展示了每个提交所在的分支及其分化衍合情况
git log --pretty=format:"%h %s" --graph

#查看某个人提交的历史
git log --authoer=James.Yu





修改操作
========

#撤销为暂存的修改
----------------
git checkout -- plan/plan.txt

#取消暂存的修改
--------------
git reset HEAD plan.txt

#补充遗漏的提交
------------------------------------------
git commit -m 'initial commit'
git add forgotten_file
git commit --amend










